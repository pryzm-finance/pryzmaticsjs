syntax = "proto3";
package cosmatics.server;

import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "cosmatics/metric.proto";

option go_package = "github.com/refractedlabs/cosmatics/server";

message QueryMetricsRequest {
  string metric_id = 1;
  cosmatics.MetricType metric_type = 2;
  string from_block_height = 3 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = true
  ];
  string to_block_height = 4 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = true
  ];
  string from_time = 5 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = true
  ];
  string to_time = 6 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = true
  ];
  cosmos.base.query.v1beta1.PageRequest pagination = 7 [(gogoproto.nullable) = true];
}

message QueryMetricsResponse {
  repeated cosmatics.Metric metrics = 1 [(gogoproto.nullable) = false];
}