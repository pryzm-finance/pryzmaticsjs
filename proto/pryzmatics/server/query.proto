syntax = "proto3";
package pryzmatics.server;

import "google/api/annotations.proto";

import "pryzmatics/server/asset/asset.proto";
import "pryzmatics/server/asset/assets_details.proto";

import "pryzmatics/server/maturity/maturity.proto";

import "pryzmatics/server/pgov/proposal.proto";
import "pryzmatics/server/pgov/vote.proto";

import "pryzmatics/server/pool/pool_token.proto";
import "pryzmatics/server/pool/pool.proto";
import "pryzmatics/server/pool/token.proto";
import "pryzmatics/server/pool/historical_token_yield.proto";
import "pryzmatics/server/pool/historical_pool_apr.proto";
import "pryzmatics/server/pool/token_yield.proto";

import "pryzmatics/server/price/historical_price.proto";
import "pryzmatics/server/price/historical_nav.proto";
import "pryzmatics/server/price/price.proto";
import "pryzmatics/server/price/price_bounds.proto";
import "pryzmatics/server/price/swappable_tokens.proto";

import "pryzmatics/server/trade/pulse_tradable_pairs.proto";
import "pryzmatics/server/trade/trade_simulation.proto";
import "pryzmatics/server/trade/swap_steps.proto";
import "pryzmatics/server/trade/join_all_tokens_exact_lpt_simulation.proto";
import "pryzmatics/server/trade/join_exact_tokens_simulation.proto";
import "pryzmatics/server/trade/join_token_exact_lpt_simulation.proto";
import "pryzmatics/server/trade/zero_impact_join_yamm_simulation.proto";
import "pryzmatics/server/trade/zero_impact_join_asset_to_nested_simulation.proto";
import "pryzmatics/server/trade/zero_impact_join_asset_to_yamm_simulation.proto";
import "pryzmatics/server/trade/exit_token_exact_lpt_simulation.proto";
import "pryzmatics/server/trade/exit_exact_tokens_simulation.proto";
import "pryzmatics/server/trade/exit_all_tokens_exact_lpt_simulation.proto";
import "pryzmatics/server/trade/trade_volume.proto";
import "pryzmatics/server/trade/user_pulse_trade_volume.proto";
import "pryzmatics/server/trade/user_trade_history.proto";
import "pryzmatics/server/trade/order.proto";
import "pryzmatics/server/trade/directly_connected_token_pairs.proto";
import "pryzmatics/server/trade/tickers.proto";
import "pryzmatics/server/trade/user_pryzm_claim_history.proto";
import "pryzmatics/server/trade/user_pair_trade_volume.proto";

import "pryzmatics/server/icstaking/host_chain.proto";

import "pryzmatics/server/incentives/incentives.proto";

import "pryzmatics/server/oracle/validator.proto";
import "pryzmatics/server/oracle/vote_interval.proto";
import "pryzmatics/server/oracle/slash_window.proto";
import "pryzmatics/server/oracle/vote_summary.proto";
import "pryzmatics/server/oracle/validator_vote_interval_summary.proto";
import "pryzmatics/server/oracle/validator_slash_window_summary.proto";
import "pryzmatics/server/oracle/pre_vote.proto";
import "pryzmatics/server/oracle/vote.proto";
import "pryzmatics/server/oracle/vote_payload.proto";
import "pryzmatics/server/oracle/ballot_vote_result.proto";
import "pryzmatics/server/oracle/vote_interval_report.proto";
import "pryzmatics/server/oracle/slash_window_analysis.proto";

import "pryzmatics/server/ystaking/user_stake.proto";

import "pryzmatics/server/faucet/claim.proto";

import "pryzmatics/server/flowtrade/flowtrade.proto";
import "pryzmatics/server/flowtrade/flow_historical_price.proto";

import "pryzmatics/server/common/config.proto";
import "pryzmatics/server/common/addresses.proto";

import "pryzmatics/server/gov/proposal.proto";
import "pryzmatics/server/gov/vote.proto";

import "pryzmatics/server/statistics/statistics.proto";
import "pryzmatics/server/statistics/historical_market_cap.proto";

import "pryzmatics/server/bank/historical_bank_supply.proto";

import "pryzmatics/server/portfolio/portfolio.proto";

import "pryzmatics/server/icns/icns.proto";

import "pryzmatics/server/pvault/purchase_simulation.proto";
import "pryzmatics/server/pvault/contracts.proto";

import "pryzmatics/server/seal/activity.proto";
import "pryzmatics/server/seal/order.proto";
import "pryzmatics/server/seal/pair.proto";
import "pryzmatics/server/seal/reservation.proto";

import "pryzmatics/server/bank/denom_owners.proto";

import "pryzmatics/server/wasm/contract_info.proto";

import "pryzmatics/server/thirdparty/coingecko/circulating_supply.proto";

option go_package = "github.com/pryzm-finance/pryzmatics/server";

service Query {

  rpc Asset(pryzmatics.server.asset.QueryAssetRequest) returns (pryzmatics.server.asset.QueryAssetResponse) {
    option (google.api.http).get = "/pryzmatics/asset/{asset_id}";
  }

  rpc Assets(pryzmatics.server.asset.QueryAssetsRequest) returns (pryzmatics.server.asset.QueryAssetsResponse) {
    option (google.api.http).get = "/pryzmatics/asset";
  }

  rpc AssetsDetails(pryzmatics.server.asset.QueryAssetsDetailsRequest) returns (pryzmatics.server.asset.QueryAssetsDetailsResponse) {
    option (google.api.http).get = "/pryzmatics/asset_details";
  }

  rpc MaturityAll(pryzmatics.server.maturity.QueryAllMaturitiesRequest) returns (pryzmatics.server.maturity.QueryAllMaturitiesResponse) {
    option (google.api.http).get = "/pryzmatics/maturity";
  }

  rpc PGovProposals(pryzmatics.server.pgov.QueryPGovProposalsRequest) returns (pryzmatics.server.pgov.QueryPGovProposalsResponse) {
    option (google.api.http).get = "/pryzmatics/pgov/proposal";
  }

  rpc PGovProposal(pryzmatics.server.pgov.QueryPGovProposalRequest) returns (pryzmatics.server.pgov.QueryPGovProposalResponse) {
    option (google.api.http).get = "/pryzmatics/pgov/proposal/{asset_id}/{proposal_id}";
  }

  rpc PGovVotes(pryzmatics.server.pgov.QueryPGovVotesRequest) returns (pryzmatics.server.pgov.QueryPGovVotesResponse) {
    option (google.api.http).get = "/pryzmatics/pgov/vote/{asset_id}/{proposal_id}";
  }

  rpc PoolToken(pryzmatics.server.pool.QueryPoolTokenRequest) returns (pryzmatics.server.pool.QueryPoolTokenResponse) {
    option (google.api.http).get = "/pryzmatics/pool/token/{pool_id}/{denom}";
  }

  rpc PoolTokens(pryzmatics.server.pool.QueryAllPoolTokenRequest) returns (pryzmatics.server.pool.QueryAllPoolTokenResponse) {
    option (google.api.http).get = "/pryzmatics/pool/token/{pool_id}";
  }

  rpc Pool(pryzmatics.server.pool.QueryPoolRequest) returns (pryzmatics.server.pool.QueryPoolResponse) {
    option (google.api.http).get = "/pryzmatics/pool/{pool_id}";
  }

  rpc Pools(pryzmatics.server.pool.QueryPoolsRequest) returns (pryzmatics.server.pool.QueryPoolsResponse) {
    option (google.api.http).get = "/pryzmatics/pool";
  }

  rpc Token(pryzmatics.server.pool.QueryTokenRequest) returns (pryzmatics.server.pool.QueryTokenResponse) {
    option (google.api.http).get = "/pryzmatics/token/{denom}";
  }

  rpc Tokens(pryzmatics.server.pool.QueryTokensRequest) returns (pryzmatics.server.pool.QueryTokensResponse) {
    option (google.api.http).get = "/pryzmatics/token";
  }

  rpc HistoricalTokenYield(pryzmatics.server.pool.QueryHistoricalTokenYieldRequest) returns (pryzmatics.server.pool.QueryHistoricalTokenYieldResponse) {
    option (google.api.http).get = "/pryzmatics/token/historical_yield/{denom}";
  }

  rpc HistoricalPoolApr(pryzmatics.server.pool.QueryHistoricalPoolAprRequest) returns (pryzmatics.server.pool.QueryHistoricalPoolAprResponse) {
    option (google.api.http).get = "/pryzmatics/pool/historical_apr/{pool_id}";
  }

  rpc TokenYields(pryzmatics.server.pool.QueryTokenYieldsRequest) returns (pryzmatics.server.pool.QueryTokenYieldsResponse) {
    option (google.api.http).get = "/pryzmatics/token/yield/{block_height}";
  }

  rpc TokenPrice(pryzmatics.server.price.QueryPriceRequest) returns (pryzmatics.server.price.QueryPriceResponse) {
    option (google.api.http).get = "/pryzmatics/price/{token_out}";
  }

  rpc TokenPrices(pryzmatics.server.price.QueryPricesRequest) returns (pryzmatics.server.price.QueryPricesResponse) {
    option (google.api.http).get = "/pryzmatics/prices/{block_height}";
  }

  rpc HistoricalPrice(pryzmatics.server.price.QueryHistoricalPriceRequest) returns (pryzmatics.server.price.QueryHistoricalPriceResponse) {
    option (google.api.http).get = "/pryzmatics/price/historical/{denom}";
  }

  rpc HistoricalNav(pryzmatics.server.price.QueryHistoricalNavRequest) returns (
  pryzmatics.server.price.QueryHistoricalNavResponse) {
    option (google.api.http).get = "/pryzmatics/nav/historical/{denom}";
  }

  rpc HistoricalMarketCap(pryzmatics.server.statistics.QueryHistoricalMarketCapRequest) returns (
  pryzmatics.server.statistics.QueryHistoricalMarketCapResponse) {
    option (google.api.http).get = "/pryzmatics/statistics/historical_market_cap";
  }

  rpc SwappableTokens(pryzmatics.server.price.QuerySwappableTokensRequest) returns (pryzmatics.server.price.QuerySwappableTokensResponse) {
    option (google.api.http).get = "/pryzmatics/price/swappable_tokens";
  }

  rpc PriceBounds(pryzmatics.server.price.QueryPriceBoundsRequest) returns (pryzmatics.server.price.QueryPriceBoundsResponse) {
    option (google.api.http).get = "/pryzmatics/price/bounds/{denom}";
  }

  //  rpc PriceChange(pryzmatics.server.price.QueryPriceChangeRequest) returns (pryzmatics.server.price.QueryPriceChangeResponse) {
  //    option (google.api.http).get = "/pryzmatics/price/change/{denom}";
  //  } TODO remove

  rpc TradeSimulation(pryzmatics.server.trade.QueryTradeSimulationRequest) returns (pryzmatics.server.trade.QueryTradeSimulationResponse) {
    option (google.api.http).get = "/pryzmatics/trade/simulation";
  }

  rpc SwapSteps(pryzmatics.server.trade.QuerySwapStepsRequest) returns (pryzmatics.server.trade.QuerySwapStepsResponse) {
    option (google.api.http).get = "/pryzmatics/trade/swap_steps";
  }

  rpc JoinAllTokensExactLptSimulation(pryzmatics.server.trade.QueryJoinAllTokensExactLptSimulationRequest) returns (pryzmatics.server.trade.QueryJoinAllTokensExactLptSimulationResponse) {
    option (google.api.http).get = "/pryzmatics/trade/join_all_tokens_exact_lpt_simulation/{pool_id}";
  }

  rpc JoinExactTokensSimulation(pryzmatics.server.trade.QueryJoinExactTokensSimulationRequest) returns (pryzmatics.server.trade.QueryJoinExactTokensSimulationResponse) {
    option (google.api.http).get = "/pryzmatics/trade/join_exact_tokens_simulation/{pool_id}";
  }

  rpc JoinTokenExactLptSimulation(pryzmatics.server.trade.QueryJoinTokenExactLptSimulationRequest) returns (pryzmatics.server.trade.QueryJoinTokenExactLptSimulationResponse) {
    option (google.api.http).get = "/pryzmatics/trade/join_token_exact_lpt_simulation/{pool_id}";
  }

  rpc ZeroImpactJoinYammSimulation(pryzmatics.server.trade.QueryZeroImpactJoinYammSimulationRequest) returns (pryzmatics.server.trade.QueryZeroImpactJoinYammSimulationResponse) {
    option (google.api.http).get = "/pryzmatics/trade/zero_impact_join_yamm_simulation";
  }

  rpc ZeroImpactJoinAssetToNestedSimulation(pryzmatics.server.trade.QueryZeroImpactJoinAssetToNestedSimulationRequest) returns (pryzmatics.server.trade.QueryZeroImpactJoinAssetToNestedSimulationResponse) {
    option (google.api.http).get = "/pryzmatics/trade/zero_impact_join_asset_to_nested_simulation";
  }

  rpc ZeroImpactJoinAssetToYammSimulation(pryzmatics.server.trade.QueryZeroImpactJoinAssetToYammSimulationRequest) returns (pryzmatics.server.trade.QueryZeroImpactJoinAssetToYammSimulationResponse) {
    option (google.api.http).get = "/pryzmatics/trade/zero_impact_join_asset_to_yamm_simulation";
  }

  rpc ExitTokenExactLptSimulation(pryzmatics.server.trade.QueryExitTokenExactLptSimulationRequest) returns (pryzmatics.server.trade.QueryExitTokenExactLptSimulationResponse) {
    option (google.api.http).get = "/pryzmatics/trade/exit_token_exact_lpt_simulation/{pool_id}";
  }

  rpc ExitExactTokensSimulation(pryzmatics.server.trade.QueryExitExactTokensSimulationRequest) returns (pryzmatics.server.trade.QueryExitExactTokensSimulationResponse) {
    option (google.api.http).get = "/pryzmatics/trade/exit_exact_tokens_simulation/{pool_id}";
  }

  rpc ExitAllTokensExactLptSimulation(pryzmatics.server.trade.QueryExitAllTokensExactLptSimulationRequest) returns (pryzmatics.server.trade.QueryExitAllTokensExactLptSimulationResponse) {
    option (google.api.http).get = "/pryzmatics/trade/exit_all_tokens_exact_lpt_simulation/{pool_id}";
  }

  rpc UserTradeHistory(pryzmatics.server.trade.QueryUserTradeHistoryRequest) returns (pryzmatics.server.trade.QueryUserTradeHistoryResponse) {
    option (google.api.http).get = "/pryzmatics/trade/user_trade_history";
  }

  rpc UserTradeHistorySummary(pryzmatics.server.trade.QueryUserTradeHistorySummaryRequest) returns (pryzmatics.server.trade.QueryUserTradeHistorySummaryResponse) {
    option (google.api.http).get = "/pryzmatics/trade/user_trade_history_summary";
  }

  rpc UserTradeVolume(pryzmatics.server.trade.QueryUserTradeVolumeRequest) returns (pryzmatics.server.trade.QueryUserTradeVolumeResponse) {
    option (google.api.http).get = "/pryzmatics/trade/user_trade_volume";
  }

  rpc IntervalUserTradeVolume(pryzmatics.server.trade.QueryIntervalUserTradeVolumeRequest) returns (pryzmatics.server.trade.QueryIntervalUserTradeVolumeResponse) {
    option (google.api.http).get = "/pryzmatics/trade/interval_user_trade_volume";
  }

  //  rpc PoolTradeHistory(pryzmatics.server.trade.QueryPoolTradeHistoryRequest) returns (pryzmatics.server.trade.QueryPoolTradeHistoryResponse) {
  //    option (google.api.http).get = "/pryzmatics/trade/pool_trade_history";
  //  } TODO remove

  rpc TokenTradeVolume(pryzmatics.server.trade.QueryTokenTradeVolumeRequest) returns (pryzmatics.server.trade.QueryTokenTradeVolumeResponse) {
    option (google.api.http).get = "/pryzmatics/trade/volume/token/{denom}";
  }

  rpc PoolTradeVolume(pryzmatics.server.trade.QueryPoolTradeVolumeRequest) returns (pryzmatics.server.trade.QueryPoolTradeVolumeResponse) {
    option (google.api.http).get = "/pryzmatics/trade/volume/pool/{pool_id}";
  }

  rpc FavoritePairs(pryzmatics.server.trade.QueryFavoritePairsRequest) returns (pryzmatics.server.trade.QueryFavoritePairsResponse) {
    option (google.api.http).get = "/pryzmatics/trade/volume/favorite_pairs";
  }

  rpc PulseTradablePairs(pryzmatics.server.trade.QueryPulseTradablePairsRequest) returns (pryzmatics.server.trade.QueryPulseTradablePairsResponse) {
    option (google.api.http).get = "/pryzmatics/trade/pulse_tradable_pairs/{denom}";
  }

  rpc PulseTradablePairPrice(pryzmatics.server.trade.QueryPulseTradablePairPriceRequest) returns (pryzmatics.server.trade.QueryPulseTradablePairPriceResponse) {
    option (google.api.http).get = "/pryzmatics/trade/pulse_tradable_pair_price";
  }

  rpc Order(pryzmatics.server.trade.QueryOrderRequest) returns (pryzmatics.server.trade.QueryOrderResponse) {
    option (google.api.http).get = "/pryzmatics/trade/order/{id}";
  }

  rpc Orders(pryzmatics.server.trade.QueryOrdersRequest) returns (pryzmatics.server.trade.QueryOrdersResponse) {
    option (google.api.http).get = "/pryzmatics/trade/order";
  }

  rpc MatchableOrderCounts(pryzmatics.server.trade.QueryMatchableOrderCountsRequest) returns (pryzmatics.server.trade.QueryMatchableOrderCountsResponse) {
    option (google.api.http).get = "/pryzmatics/trade/matchable_order_counts";
  }

  rpc MatchableOrdersForPair(pryzmatics.server.trade.QueryMatchableOrdersForPairRequest) returns (pryzmatics.server.trade.QueryMatchableOrdersForPairResponse) {
    option (google.api.http).get = "/pryzmatics/trade/matchable_orders_for_pair/{token_in}/{token_out}/{pool_id}/{whitelisted_route}";
  }

  rpc MatchableBuyOrdersForPair(pryzmatics.server.trade.QueryMatchableBuyOrdersForPairRequest) returns (pryzmatics.server.trade.QueryMatchableBuyOrdersForPairResponse) {
    option (google.api.http).get = "/pryzmatics/trade/matchable_buy_orders_for_pair/{token_in}/{token_out}/{pool_id}/{whitelisted_route}";
  }

  rpc MatchableBuyOrdersForPairSummary(pryzmatics.server.trade.QueryMatchableBuyOrdersForPairSummaryRequest) returns (pryzmatics.server.trade.QueryMatchableBuyOrdersForPairSummaryResponse) {
    option (google.api.http).get = "/pryzmatics/trade/matchable_buy_orders_for_pair_summary/{token_in}/{token_out}/{pool_id}/{whitelisted_route}";
  }

  rpc OrderPairsToDisable(pryzmatics.server.trade.QueryOrderPairsToDisableRequest) returns (pryzmatics.server.trade.QueryOrderPairsToDisableResponse) {
    option (google.api.http).get = "/pryzmatics/trade/order_pairs_to_disable";
  }

  rpc OrderPairMetrics(pryzmatics.server.trade.QueryOrderPairMetricsRequest) returns (pryzmatics.server.trade.QueryOrderPairMetricsResponse) {
    option (google.api.http).get = "/pryzmatics/trade/order_pair_metrics";
  }

  rpc OrderPairPriceBuckets(pryzmatics.server.trade.QueryOrderPairPriceBucketsRequest) returns (pryzmatics.server.trade.QueryOrderPairPriceBucketsResponse) {
    option (google.api.http).get = "/pryzmatics/trade/order_pair_price_buckets";
  }

  rpc OrderMetrics(pryzmatics.server.trade.QueryOrderMetricsRequest) returns (pryzmatics.server.trade.QueryOrderMetricsResponse) {
    option (google.api.http).get = "/pryzmatics/trade/order_metrics";
  }

  rpc DirectlyConnectedTokenPairs(pryzmatics.server.trade.QueryDirectlyConnectedTokenPairsRequest) returns (pryzmatics.server.trade.QueryDirectlyConnectedTokenPairsResponse) {
    option (google.api.http).get = "/pryzmatics/trade/directly_connected_token_pair";
  }

  // in rest-api the response is an array of tickers, instead of QueryTickersResponse
  rpc Tickers(pryzmatics.server.trade.QueryTickersRequest) returns (pryzmatics.server.trade.QueryTickersResponse) {
    option (google.api.http).get = "/pryzmatics/trade/tickers";
  }

  rpc UserPairTradeVolume(pryzmatics.server.trade.QueryUserPairTradeVolumeRequest) returns (pryzmatics.server.trade.QueryUserPairTradeVolumeResponse) {
    option (google.api.http).get = "/pryzmatics/trade/user_pair_trade_volume";
  }

  rpc HostChainUnbondingTime(pryzmatics.server.icstaking.QueryHostChainUnbondingTimeRequest) returns (pryzmatics.server.icstaking.QueryHostChainUnbondingTimeResponse) {
    option (google.api.http).get = "/pryzmatics/icstaking/host_chain_unbonding_time/{host_chain_id}";
  }

  rpc HostChain(pryzmatics.server.icstaking.QueryHostChainRequest) returns (pryzmatics.server.icstaking.QueryHostChainResponse) {
    option (google.api.http).get = "/pryzmatics/icstaking/host_chain/{host_chain_id}";
  }

  rpc HostChains(pryzmatics.server.icstaking.QueryHostChainsRequest) returns (pryzmatics.server.icstaking.QueryHostChainsResponse) {
    option (google.api.http).get = "/pryzmatics/icstaking/host_chain";
  }

  rpc HostChainByUnderlyingDenom(pryzmatics.server.icstaking.QueryHostChainByUnderlyingDenomRequest) returns (pryzmatics.server.icstaking.QueryHostChainByUnderlyingDenomResponse) {
    option (google.api.http).get = "/pryzmatics/icstaking/host_chain_by_underlying_denom/{denom}";
  }

  rpc PoolTotalIncentives(pryzmatics.server.incentives.QueryPoolTotalIncentivesRequest) returns (pryzmatics.server.incentives.QueryPoolTotalIncentivesResponse) {
    option (google.api.http).get = "/pryzmatics/incentives/pool_total_incentives";
  }

  rpc Validator(pryzmatics.server.oracle.QueryValidatorRequest) returns (pryzmatics.server.oracle.QueryValidatorResponse) {
    option (google.api.http).get = "/pryzmatics/oracle/validator/{operator_address}";
  }

  rpc Validators(pryzmatics.server.oracle.QueryValidatorsRequest) returns (pryzmatics.server.oracle.QueryValidatorsResponse) {
    option (google.api.http).get = "/pryzmatics/oracle/validator";
  }

  rpc VoteIntervals(pryzmatics.server.oracle.QueryVoteIntervalsRequest) returns (pryzmatics.server.oracle.QueryVoteIntervalsResponse) {
    option (google.api.http).get = "/pryzmatics/oracle/vote_interval";
  }

  rpc SlashWindows(pryzmatics.server.oracle.QuerySlashWindowsRequest) returns (pryzmatics.server.oracle.QuerySlashWindowsResponse) {
    option (google.api.http).get = "/pryzmatics/oracle/slash_window";
  }

  rpc VoteSummary(pryzmatics.server.oracle.QueryVoteSummaryRequest) returns (pryzmatics.server.oracle.QueryVoteSummaryResponse) {
    option (google.api.http).get = "/pryzmatics/oracle/vote_summary";
  }

  rpc ValidatorVoteIntervalSummaries(pryzmatics.server.oracle.QueryValidatorVoteIntervalSummariesRequest) returns (pryzmatics.server.oracle.QueryValidatorVoteIntervalSummariesResponse) {
    option (google.api.http).get = "/pryzmatics/oracle/validator/vote_interval_summary/{operator_address}";
  }

  rpc ValidatorSlashWindowSummaries(pryzmatics.server.oracle.QueryValidatorSlashWindowSummariesRequest) returns (pryzmatics.server.oracle.QueryValidatorSlashWindowSummariesResponse) {
    option (google.api.http).get = "/pryzmatics/oracle/validator/slash_window_summary/{operator_address}";
  }

  rpc PreVotes(pryzmatics.server.oracle.QueryPreVotesRequest) returns (pryzmatics.server.oracle.QueryPreVotesResponse) {
    option (google.api.http).get = "/pryzmatics/oracle/pre_vote";
  }

  rpc Votes(pryzmatics.server.oracle.QueryVotesRequest) returns (pryzmatics.server.oracle.QueryVotesResponse) {
    option (google.api.http).get = "/pryzmatics/oracle/vote";
  }

  rpc VotePayloads(pryzmatics.server.oracle.QueryVotePayloadsRequest) returns (pryzmatics.server.oracle.QueryVotePayloadsResponse) {
    option (google.api.http).get = "/pryzmatics/oracle/vote_payload";
  }

  rpc BallotVoteResults(pryzmatics.server.oracle.QueryBallotVoteResultsRequest) returns (pryzmatics.server.oracle.QueryBallotVoteResultsResponse) {
    option (google.api.http).get = "/pryzmatics/oracle/ballot_vote_result";
  }

  rpc VoteIntervalReport(pryzmatics.server.oracle.QueryVoteIntervalReportRequest) returns (pryzmatics.server.oracle.QueryVoteIntervalReportResponse) {
    option (google.api.http).get = "/pryzmatics/oracle/vote_interval_report/{vote_interval_close_block_height}";
  }

  rpc OracleAnalysis(pryzmatics.server.oracle.QuerySlashWindowAnalysisRequest) returns (pryzmatics.server.oracle.QuerySlashWindowAnalysisResponse) {
    option (google.api.http).get = "/pryzmatics/oracle/slash_window_analysis";
  }

  rpc UserStakes(pryzmatics.server.ystaking.QueryUserStakesRequest) returns (pryzmatics.server.ystaking.QueryUserStakesResponse) {
    option (google.api.http).get = "/pryzmatics/ystaking/user_stake";
  }

  rpc FaucetClaim(pryzmatics.server.faucet.QueryClaimRequest) returns (pryzmatics.server.faucet.QueryClaimResponse) {
    option (google.api.http).get = "/pryzmatics/faucet/claim";
  }

  rpc AllFlow(pryzmatics.server.flowtrade.QueryAllFlowRequest) returns (pryzmatics.server.flowtrade.QueryAllFlowResponse) {
    option (google.api.http).get = "/pryzmatics/flowtrade/flow";
  }

  rpc Flow(pryzmatics.server.flowtrade.QueryFlowRequest) returns (pryzmatics.server.flowtrade.QueryFlowResponse) {
    option (google.api.http).get = "/pryzmatics/flowtrade/flow/{id}";
  }

  rpc FlowHistoricalPrice(pryzmatics.server.flowtrade.QueryFlowHistoricalPriceRequest) returns (pryzmatics.server.flowtrade.QueryFlowHistoricalPriceResponse) {
    option (google.api.http).get = "/pryzmatics/flowtrade/flow/historical_price/{flow_id}";
  }

  rpc Config(pryzmatics.server.common.QueryConfigRequest) returns (pryzmatics.server.common.QueryConfigResponse) {
    option (google.api.http).get = "/pryzmatics/config";
  }

  rpc AddressesByCategory(pryzmatics.server.common.QueryAddressesByCategoryRequest) returns (pryzmatics.server.common.QueryAddressesByCategoryResponse) {
    option (google.api.http).get = "/pryzmatics/addresses/{category}";
  }

  rpc Proposal(pryzmatics.server.gov.QueryProposalRequest) returns (pryzmatics.server.gov.QueryProposalResponse) {
    option (google.api.http).get = "/pryzmatics/gov/proposal/{id}";
  }

  rpc Proposals(pryzmatics.server.gov.QueryProposalsRequest) returns (pryzmatics.server.gov.QueryProposalsResponse) {
    option (google.api.http).get = "/pryzmatics/gov/proposal";
  }

  rpc ProposalVotes(pryzmatics.server.gov.QueryProposalVotesRequest) returns (pryzmatics.server.gov.QueryProposalVotesResponse) {
    option (google.api.http).get = "/pryzmatics/gov/vote/{proposal_id}";
  }

  rpc Statistics(pryzmatics.server.statistics.QueryStatisticsRequest) returns (pryzmatics.server.statistics.QueryStatisticsResponse) {
    option (google.api.http).get = "/pryzmatics/statistics";
  }

  rpc HistoricalBankSupply(pryzmatics.server.bank.QueryHistoricalBankSupplyRequest) returns (pryzmatics.server.bank.QueryHistoricalBankSupplyResponse) {
    option (google.api.http).get = "/pryzmatics/bank/supply/historical/{denom}";
  }

  rpc Portfolio(pryzmatics.server.portfolio.QueryPortfolioRequest) returns (pryzmatics.server.portfolio.QueryPortfolioResponse) {
    option (google.api.http).get = "/pryzmatics/portfolio/{address}";
  }

  rpc IcnsByAddress(pryzmatics.server.icns.QueryIcnsByAddressRequest) returns (pryzmatics.server.icns.QueryIcnsByAddressResponse) {
    option (google.api.http).get = "/pryzmatics/icns/by_address/{address}";
  }

  rpc IcnsByName(pryzmatics.server.icns.QueryIcnsByNameRequest) returns (pryzmatics.server.icns.QueryIcnsByNameResponse) {
    option (google.api.http).get = "/pryzmatics/icns/by_name/{icns}";
  }

  rpc UserPulseTradeVolume(pryzmatics.server.trade.QueryUserPulseTradeVolumeRequest) returns (pryzmatics.server.trade.QueryUserPulseTradeVolumeResponse) {
    option (google.api.http).get = "/pryzmatics/trade/user_pulse_trade_volume";
  }

  rpc UserPryzmClaimHistory(pryzmatics.server.trade.QueryUserPryzmClaimHistoryRequest) returns (pryzmatics.server.trade.QueryUserPryzmClaimHistoryResponse) {
    option (google.api.http).get = "/pryzmatics/trade/user_pryzm_claim_history/{address}";
  }

  rpc PVaultContracts(pryzmatics.server.pvault.QueryPVaultContractsRequest) returns (pryzmatics.server.pvault.QueryPVaultContractsResponse) {
    option (google.api.http).get = "/pryzmatics/pvault/contracts";
  }

  rpc PVaultSimulatePurchase(pryzmatics.server.pvault.QueryPurchaseSimulationRequest) returns (pryzmatics.server.pvault.QueryPurchaseSimulationResponse) {
    option (google.api.http).get = "/pryzmatics/pvault/simulate_purchase";
  }

  rpc SealOrders(pryzmatics.server.seal.QuerySealOrdersRequest) returns (pryzmatics.server.seal.QuerySealOrdersResponse) {
    option (google.api.http).get = "/pryzmatics/seal/orders";
  }

  rpc SealPairs(pryzmatics.server.seal.QuerySealPairsRequest) returns (pryzmatics.server.seal.QuerySealPairsResponse) {
    option (google.api.http).get = "/pryzmatics/seal/pairs";
  }

  rpc SealPairSummary(pryzmatics.server.seal.QuerySealPairSummaryRequest) returns (pryzmatics.server.seal.QuerySealPairSummaryResponse) {
    option (google.api.http).get = "/pryzmatics/seal/pair_summary";
  }

  rpc SealReservations(pryzmatics.server.seal.QuerySealReservationsRequest) returns (pryzmatics.server.seal.QuerySealReservationsResponse) {
    option (google.api.http).get = "/pryzmatics/seal/reservations";
  }

  rpc SealOrderActivities(pryzmatics.server.seal.QuerySealOrderActivitiesRequest) returns (pryzmatics.server.seal.QuerySealOrderActivitiesResponse) {
    option (google.api.http).get = "/pryzmatics/seal/activities";
  }

  rpc SealReservationSettlementActivities(pryzmatics.server.seal.QuerySealReservationSettlementActivitiesRequest) returns (pryzmatics.server.seal.QuerySealReservationSettlementActivitiesResponse) {
    option (google.api.http).get = "/pryzmatics/seal/reservation_settlement_activities/{reservation_id}";
  }

  rpc SealPairPrice(pryzmatics.server.seal.QuerySealPairPriceRequest) returns (pryzmatics.server.seal.QuerySealPairPriceResponse) {
    option (google.api.http).get = "/pryzmatics/seal/pair_price";
  }

  rpc DenomOwners(pryzmatics.server.bank.DenomOwnersRequest) returns (pryzmatics.server.bank.DenomOwnersResponse) {
    option (google.api.http).get = "/pryzmatics/denom_owners/{denom}";
  }

  rpc ContractInfo(pryzmatics.server.wasm.QueryContractInfoRequest) returns (pryzmatics.server.wasm.QueryContractInfoResponse) {
    option (google.api.http).get = "/pryzmatics/wasm/contract_info";
  }

  rpc CirculatingSupply(pryzmatics.server.thirdparty.coingecko.QueryCirculatingSupplyRequest) returns (pryzmatics.server.thirdparty.coingecko.QueryCirculatingSupplyResponse) {
    option (google.api.http).get = "/pryzmatics/coingecko/circulating_supply";
  }
}
